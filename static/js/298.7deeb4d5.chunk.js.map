{"version":3,"file":"static/js/298.7deeb4d5.chunk.js","mappings":"8JAQA,UARqB,WACnB,OACE,0BACE,wBAAI,uDAGT,C,6HCOD,EAbmB,SAAC,GAAgD,IAAD,IAA7CA,OAAUC,EAAmC,EAAnCA,OAAQC,EAA2B,EAA3BA,QAAeC,GAAY,EAAlBC,GAAkB,EAAZD,OACrD,OACE,+BACE,2BACE,0BAAI,YACM,0BAAOF,QAEjB,uBAAIC,MAJGC,IAQd,E,2BC6BD,EAlCgB,WACd,OAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAaC,EAAAA,EAAAA,MAAbD,SACR,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WAAM,wCACd,8GAE8BC,EAAAA,EAAAA,IAAiBL,GAF/C,OAEUM,EAFV,OAGIP,EAAWO,EAAYC,SAH3B,gDAKIC,QAAQN,MAAR,MACAC,GAAS,GANb,0DADc,uBAAC,WAAD,wBAUdM,EACD,GAAE,CAACT,KAGF,gCACGE,IAAS,SAAC,UAAD,IACTJ,IACC,0BACE,wBACGA,EAAQY,KAAI,SAAClB,EAAQG,GACpB,OAAO,SAAC,EAAD,CAAYH,OAAQA,EAAQG,MAAOA,GAC3C,UAMZ,C,+LC9BM,SAAegB,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,sBADd,cACCC,EADD,yBAGEA,EAAKC,MAHP,kEANPF,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBG,QAAS,oCASJ,IAAMC,EAAe,mCAAG,WAAMhB,GAAN,uFACVY,EAAAA,EAAAA,IAAA,iBAAoBZ,EAApB,qBADU,cACvBa,EADuB,yBAGtBA,EAAKC,MAHiB,2CAAH,sDAMrB,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAmCC,GAAnC,uFACcN,EAAAA,EAAAA,IAAA,6BAAgCM,IAD9C,cACCL,EADD,yBAGEA,EAAKC,MAHP,kEAMA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BnB,GAA9B,uFACcY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,aADd,cACCa,EADD,yBAGEA,EAAKC,MAHP,kEAKA,SAAeT,EAAtB,+CAAO,OAAP,oBAAO,WAAgCL,GAAhC,uFACcY,EAAAA,EAAAA,IAAA,gBAAmBZ,EAAnB,aADd,cACCa,EADD,yBAGEA,EAAKC,MAHP,kE","sources":["components/ErrorMessages/ErrorMessages.jsx","components/ReviewItem/ReviewItem.jsx","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["const ErrorMessage = () => {\n  return (\n    <div>\n      <h3> Oops....Not found page! Please reload the page !</h3>\n    </div>\n  );\n};\n\nexport default ErrorMessage;\n","const ReviewItem = ({ review: { author, content, id }, index }) => {\n  return (\n    <>\n      <li key={index}>\n        <h3>\n          Author: <span>{author}</span>\n        </h3>\n        <p>{content}</p>\n      </li>\n    </>\n  );\n};\n\nexport default ReviewItem;\n","import ErrorMessage from 'components/ErrorMessages/ErrorMessages';\nimport ReviewItem from 'components/ReviewItem/ReviewItem';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviwsMovie } from 'services/api';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { moviesId } = useParams();\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    async function fetchCastInf() {\n      try {\n        const respReviews = await fetchReviwsMovie(moviesId);\n        setReviews(respReviews.results);\n      } catch (error) {\n        console.error(error);\n        setError(true);\n      }\n    }\n    fetchCastInf();\n  }, [moviesId]);\n\n  return (\n    <>\n      {error && <ErrorMessage />}\n      {reviews && (\n        <div>\n          <ul>\n            {reviews.map((review, index) => {\n              return <ReviewItem review={review} index={index} />;\n            })}\n          </ul>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '64402845586832b1fcc80d4c6361d650';\naxios.defaults.params = {\n  api_key: '64402845586832b1fcc80d4c6361d650',\n};\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(`trending/movie/day`);\n\n  return resp.data;\n}\n\nexport const fetchMoviesById = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}?&language=en-US`);\n\n  return resp.data;\n};\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const resp = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return resp.data;\n}\n\nexport async function fetchCastMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/credits`);\n\n  return resp.data;\n}\nexport async function fetchReviwsMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/reviews`);\n\n  return resp.data;\n}\n"],"names":["review","author","content","index","id","useState","reviews","setReviews","moviesId","useParams","error","setError","useEffect","fetchReviwsMovie","respReviews","results","console","fetchCastInf","map","fetchTrendingMovies","axios","resp","data","api_key","fetchMoviesById","fetchMoviesBySearch","searchQuery","fetchCastMovie"],"sourceRoot":""}