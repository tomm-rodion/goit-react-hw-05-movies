{"version":3,"file":"static/js/278.3b2e5d3c.chunk.js","mappings":"oKAqBA,IAnBmB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MACjB,OACE,0BACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,SAAC,KAAD,CAASC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAnD,SACGG,EAAMK,SAFFL,EAAME,GAMlB,OAIR,C,0HCiCD,UA/Ce,WAAO,IAAD,IACnB,GAAwCI,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAcF,EAAaG,IAAI,SACrC,GAAkDC,EAAAA,EAAAA,UAAS,IAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KAEMC,EAAY,qBADDhB,EAAAA,EAAAA,MACaK,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,KAE7CW,EAAAA,EAAAA,YAAU,WAAM,wCAGd,8GAEuBC,EAAAA,EAAAA,IAAoBP,GAF3C,OAEUQ,EAFV,OAGIJ,EAAqBI,EAAKC,SAH9B,gDAKIC,QAAQC,MAAR,MALJ,0DAHc,sBACTX,GADS,mCAWdY,EACD,GAAE,CAACZ,IAQJ,OACE,iCACE,SAAC,KAAD,CAASR,GAAIa,EAAb,SAA2B,aAC3B,wBAAI,mBACJ,iBAAMQ,SAVe,SAAAC,GACvBA,EAAEC,iBACFhB,EAAgB,CAAEiB,MAAOF,EAAEG,OAAOL,aAAaM,QAC/CJ,EAAEG,OAAOE,OACV,EAMG,UACE,kBAAOC,KAAK,eAAZ,UACE,kBACEA,KAAK,eACLC,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,mCAIlB,SAAC,IAAD,CAAYrC,OAAQgB,MAGzB,C,+LC1CM,SAAesB,IAAtB,4CAAO,OAAP,oBAAO,oGACcC,EAAAA,EAAAA,IAAA,sBADd,cACClB,EADD,yBAGEA,EAAKmB,MAHP,kEANPD,EAAAA,EAAAA,SAAAA,QAAyB,gCAEzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBE,QAAS,oCASJ,IAAMC,EAAe,mCAAG,WAAMC,GAAN,uFACVJ,EAAAA,EAAAA,IAAA,iBAAoBI,EAApB,qBADU,cACvBtB,EADuB,yBAGtBA,EAAKmB,MAHiB,2CAAH,sDAMrB,SAAepB,EAAtB,+CAAO,OAAP,oBAAO,WAAmCP,GAAnC,uFACc0B,EAAAA,EAAAA,IAAA,6BAAgC1B,IAD9C,cACCQ,EADD,yBAGEA,EAAKmB,MAHP,kEAMA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8BD,GAA9B,uFACcJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,aADd,cACCtB,EADD,yBAGEA,EAAKmB,MAHP,kEAKA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAgCF,GAAhC,uFACcJ,EAAAA,EAAAA,IAAA,gBAAmBI,EAAnB,aADd,cACCtB,EADD,yBAGEA,EAAKmB,MAHP,kE","sources":["components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import { NavLink, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <div>\n      <ul>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <NavLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </NavLink>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\nimport { fetchMoviesBySearch } from 'services/api';\nimport MoviesList from 'components/MoviesList/MoviesList';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchQuery = searchParams.get('query');\n  const [valueSearchMovies, setValueSearchMovies] = useState([]);\n  const location = useLocation();\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    async function searchMovies() {\n      try {\n        const resp = await fetchMoviesBySearch(searchQuery);\n        setValueSearchMovies(resp.results);\n      } catch (error) {\n        console.error(error);\n      }\n    }\n    searchMovies();\n  }, [searchQuery]);\n\n  const handleSubmitForm = e => {\n    e.preventDefault();\n    setSearchParams({ query: e.target.searchMovies.value });\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <NavLink to={backLinkHref}>Go back</NavLink>\n      <h2>Search movies</h2>\n      <form onSubmit={handleSubmitForm}>\n        <label name=\"searchMovies\">\n          <input\n            name=\"searchMovies\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search movies for name...\"\n          />\n        </label>\n      </form>\n      <MoviesList movies={valueSearchMovies} />\n    </>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n// const API_KEY = '64402845586832b1fcc80d4c6361d650';\naxios.defaults.params = {\n  api_key: '64402845586832b1fcc80d4c6361d650',\n};\n\nexport async function fetchTrendingMovies() {\n  const resp = await axios.get(`trending/movie/day`);\n\n  return resp.data;\n}\n\nexport const fetchMoviesById = async moviesId => {\n  const resp = await axios.get(`/movie/${moviesId}?&language=en-US`);\n\n  return resp.data;\n};\n\nexport async function fetchMoviesBySearch(searchQuery) {\n  const resp = await axios.get(`search/movie?query=${searchQuery}`);\n\n  return resp.data;\n}\n\nexport async function fetchCastMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/credits`);\n\n  return resp.data;\n}\nexport async function fetchReviwsMovie(moviesId) {\n  const resp = await axios.get(`movie/${moviesId}/reviews`);\n\n  return resp.data;\n}\n"],"names":["movies","location","useLocation","map","movie","to","id","state","from","title","useSearchParams","searchParams","setSearchParams","searchQuery","get","useState","valueSearchMovies","setValueSearchMovies","backLinkHref","useEffect","fetchMoviesBySearch","resp","results","console","error","searchMovies","onSubmit","e","preventDefault","query","target","value","reset","name","type","autoComplete","autoFocus","placeholder","fetchTrendingMovies","axios","data","api_key","fetchMoviesById","moviesId","fetchCastMovie","fetchReviwsMovie"],"sourceRoot":""}